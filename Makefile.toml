[tasks.build]
workspace = false
command = "cargo"
args = ["build"]

[tasks.build-mac-app]
workspace = false
dependencies = ["build"]
script = [
    """
    #!/usr/bin/env bash
    mkdir -p $CARGO_MAKE_CRATE_NAME.app/Contents/MacOS/
    cp target/debug/$CARGO_MAKE_CRATE_NAME $CARGO_MAKE_CRATE_NAME.app/Contents/MacOS/
    """
]

[tasks.run-mac-app]
workspace = false
dependencies = ["build-mac-app"]
script = [
    """
    #!/usr/bin/env bash
    open $CARGO_MAKE_CRATE_NAME.app
    """
]

[tasks.run-in-mac-app]
workspace = false
dependencies = ["build-mac-app"]
script = [
    """
    #!/usr/bin/env bash
    ./$CARGO_MAKE_CRATE_NAME.app/Contents/MacOS/$CARGO_MAKE_CRATE_NAME
    """
]

[tasks.build-wasm]
workspace = false
script = [
    """
    #!/usr/bin/env bash
    RUST_LOG=info cargo build --release --target wasm32-unknown-unknown --no-default-features --features="bundled"
    wasm-bindgen --no-typescript --out-name $CARGO_MAKE_CRATE_NAME --out-dir wasm --target web ${CARGO_TARGET_DIR:-target}/wasm32-unknown-unknown/release/$CARGO_MAKE_CRATE_NAME.wasm
    """
]

[tasks.watch-wasm]
workspace = false
watch = { watch = ["./src/", "./crates/"] }
script = [
    """
    #!/usr/bin/env bash
    RUST_LOG=info cargo build --release --target wasm32-unknown-unknown --no-default-features --features="bundled"
    wasm-bindgen --no-typescript --out-name $CARGO_MAKE_CRATE_NAME --out-dir wasm --target web ${CARGO_TARGET_DIR:-target}/wasm32-unknown-unknown/release/$CARGO_MAKE_CRATE_NAME.wasm
    """
]
